/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PayoutManager,
  PayoutManagerInterface,
} from "../../contracts/PayoutManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cusdTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_farmerRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "farmer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PayoutTriggered",
    type: "event",
  },
  {
    inputs: [],
    name: "cusdToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "farmerRegistry",
    outputs: [
      {
        internalType: "contract FarmerRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_farmer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "triggerPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161063138038061063183398101604081905261002f91610100565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610094565b5060018055600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055610133565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100fb57600080fd5b919050565b6000806040838503121561011357600080fd5b61011c836100e4565b915061012a602084016100e4565b90509250929050565b6104ef806101426000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630da8098014610067578063715018a6146100965780638da5cb5b146100a0578063b1faff35146100b1578063cae07843146100c4578063f2fde38b146100d7575b600080fd5b60035461007a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e6100ea565b005b6000546001600160a01b031661007a565b61009e6100bf36600461044b565b6100fe565b60025461007a906001600160a01b031681565b61009e6100e5366004610475565b61027c565b6100f26102ba565b6100fc60006102e7565b565b6101066102ba565b61010e610337565b6003546040516319d8b50f60e21b81526001600160a01b03848116600483015290911690636762d43c90602401602060405180830381865afa158015610158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017c9190610497565b6101c55760405162461bcd60e51b815260206004820152601560248201527411985c9b595c881b9bdd081c9959da5cdd195c9959605a1b60448201526064015b60405180910390fd5b600081116102155760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101bc565b60025461022c906001600160a01b03168383610361565b816001600160a01b03167faa4198e15ce4666385864542abb6c33c50cc9415ee36bb7eb4e6f8188fff63478260405161026791815260200190565b60405180910390a261027860018055565b5050565b6102846102ba565b6001600160a01b0381166102ae57604051631e4fbdf760e01b8152600060048201526024016101bc565b6102b7816102e7565b50565b6000546001600160a01b031633146100fc5760405163118cdaa760e01b81523360048201526024016101bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60026001540361035a57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103b39084906103b8565b505050565b600080602060008451602086016000885af1806103db576040513d6000823e3d81fd5b50506000513d915081156103f3578060011415610400565b6001600160a01b0384163b155b1561042957604051635274afe760e01b81526001600160a01b03851660048201526024016101bc565b50505050565b80356001600160a01b038116811461044657600080fd5b919050565b6000806040838503121561045e57600080fd5b6104678361042f565b946020939093013593505050565b60006020828403121561048757600080fd5b6104908261042f565b9392505050565b6000602082840312156104a957600080fd5b8151801515811461049057600080fdfea2646970667358221220e9e04a8024121084c8f963bf81936e08804248798a780decf6604b9a703a0adb64736f6c63430008140033";

type PayoutManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayoutManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayoutManager__factory extends ContractFactory {
  constructor(...args: PayoutManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _cusdTokenAddress: AddressLike,
    _farmerRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _cusdTokenAddress,
      _farmerRegistryAddress,
      overrides || {}
    );
  }
  override deploy(
    _cusdTokenAddress: AddressLike,
    _farmerRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _cusdTokenAddress,
      _farmerRegistryAddress,
      overrides || {}
    ) as Promise<
      PayoutManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PayoutManager__factory {
    return super.connect(runner) as PayoutManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayoutManagerInterface {
    return new Interface(_abi) as PayoutManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PayoutManager {
    return new Contract(address, _abi, runner) as unknown as PayoutManager;
  }
}
