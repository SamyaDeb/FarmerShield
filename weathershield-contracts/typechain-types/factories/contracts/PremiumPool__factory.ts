/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PremiumPool,
  PremiumPoolInterface,
} from "../../contracts/PremiumPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cusdTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_farmerRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "farmer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PremiumPaid",
    type: "event",
  },
  {
    inputs: [],
    name: "cusdToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "farmerBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "farmerRegistry",
    outputs: [
      {
        internalType: "contract FarmerRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "payPremium",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161065338038061065383398101604081905261002f916100fc565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610090565b50600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561012f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f757600080fd5b919050565b6000806040838503121561010f57600080fd5b610118836100e0565b9150610126602084016100e0565b90509250929050565b6105158061013e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100cf578063950f222e146100e0578063cae078431461010e578063f2fde38b1461012157600080fd5b80630da80980146100825780634364b26e146100b2578063715018a6146100c7575b600080fd5b600254610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c56100c036600461044d565b610134565b005b6100c56102ad565b6000546001600160a01b0316610095565b6101006100ee366004610466565b60036020526000908152604090205481565b6040519081526020016100a9565b600154610095906001600160a01b031681565b6100c561012f366004610466565b6102c1565b6002546040516319d8b50f60e21b81523360048201526001600160a01b0390911690636762d43c90602401602060405180830381865afa15801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a09190610496565b6101e95760405162461bcd60e51b815260206004820152601560248201527411985c9b595c881b9bdd081c9959da5cdd195c9959605a1b60448201526064015b60405180910390fd5b600081116102395760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101e0565b600154610251906001600160a01b03163330846102ff565b33600090815260036020526040812080548392906102709084906104b8565b909155505060405181815233907fa21795436a9f6a3b412fd6780f01a49907f2181e76e938496b0a41991d99b61c9060200160405180910390a250565b6102b561035f565b6102bf600061038c565b565b6102c961035f565b6001600160a01b0381166102f357604051631e4fbdf760e01b8152600060048201526024016101e0565b6102fc8161038c565b50565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526103599085906103dc565b50505050565b6000546001600160a01b031633146102bf5760405163118cdaa760e01b81523360048201526024016101e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080602060008451602086016000885af1806103ff576040513d6000823e3d81fd5b50506000513d91508115610417578060011415610424565b6001600160a01b0384163b155b1561035957604051635274afe760e01b81526001600160a01b03851660048201526024016101e0565b60006020828403121561045f57600080fd5b5035919050565b60006020828403121561047857600080fd5b81356001600160a01b038116811461048f57600080fd5b9392505050565b6000602082840312156104a857600080fd5b8151801515811461048f57600080fd5b808201808211156104d957634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122054634267a1f192c6ffce3b2502282d6d4f918f7000c8a079b8138c8bc4255aac64736f6c63430008140033";

type PremiumPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PremiumPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PremiumPool__factory extends ContractFactory {
  constructor(...args: PremiumPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _cusdTokenAddress: AddressLike,
    _farmerRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _cusdTokenAddress,
      _farmerRegistryAddress,
      overrides || {}
    );
  }
  override deploy(
    _cusdTokenAddress: AddressLike,
    _farmerRegistryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _cusdTokenAddress,
      _farmerRegistryAddress,
      overrides || {}
    ) as Promise<
      PremiumPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PremiumPool__factory {
    return super.connect(runner) as PremiumPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PremiumPoolInterface {
    return new Interface(_abi) as PremiumPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PremiumPool {
    return new Contract(address, _abi, runner) as unknown as PremiumPool;
  }
}
